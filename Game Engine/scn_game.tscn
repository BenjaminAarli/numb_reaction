[gd_scene load_steps=26 format=2]

[ext_resource path="res://Game Engine/scripts/GameSystem.gd" type="Script" id=1]
[ext_resource path="res://images/dirty colors2.png" type="Texture" id=2]
[ext_resource path="res://fonts/Mechanical-g5Y5.otf" type="DynamicFontData" id=3]
[ext_resource path="res://shaders/wobble.gdshader" type="Shader" id=4]
[ext_resource path="res://images/skills_cc/V2/Horror.png" type="Texture" id=5]
[ext_resource path="res://fonts/atwriter.ttf" type="DynamicFontData" id=6]

[sub_resource type="ShaderMaterial" id=2]
shader = ExtResource( 4 )
shader_param/screen_height = 1920.0
shader_param/amplitude = 0.005
shader_param/frequency = 5.0
shader_param/speed = 0.05
shader_param/amplitude_vertical = 0.004
shader_param/frequency_vertical = 20.0
shader_param/speed_vertical = 0.05
shader_param/scroll_direction = Vector2( 0, 0 )
shader_param/scrolling_speed = 0.04
shader_param/enable_palette_cycling = false
shader_param/palette_speed = 0.1

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

// Amount of detail.
uniform int octaves = 4;

// Opacity of the output fog.
uniform float starting_amplitude: hint_range(0.0, 0.5) = 0.5;

// Rate of pattern within the fog.
uniform float starting_frequency = 1.0;

// Shift towards transparency (clamped) for sparser fog.
uniform float shift: hint_range(-1.0, 0.0) = -0.2;

// Direction and speed of travel.
uniform vec2 velocity = vec2(1.0, 1.0);

// Color of the fog.
uniform vec4 fog_color: hint_color = vec4(0.0, 0.0, 0.0, 1.0);

// Noise texture; OpenSimplexNoise is great, but any filtered texture is fine.
uniform sampler2D noise;

float rand(vec2 uv) {
	float amplitude = starting_amplitude;
	float frequency = starting_frequency;
	float output = 0.0;
	for (int i = 0; i < octaves; i++) {
		output += texture(noise, uv * frequency).x * amplitude;
		amplitude /= 2.0;
		frequency *= 2.0;
	}
	return clamp(output + shift, 0.0, 1.0);
}

void fragment() {
	vec2 motion = vec2(rand(UV + TIME * starting_frequency * velocity));
	COLOR = mix(vec4(0.0), fog_color, rand(UV + motion));
}"

[sub_resource type="OpenSimplexNoise" id=5]

[sub_resource type="NoiseTexture" id=6]
width = 500
height = 1080
seamless = true
noise = SubResource( 5 )

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/octaves = 4
shader_param/starting_amplitude = 0.5
shader_param/starting_frequency = 1.0
shader_param/shift = -0.2
shader_param/velocity = Vector2( 0, 0.005 )
shader_param/fog_color = Color( 0, 0, 0, 1 )
shader_param/noise = SubResource( 6 )

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

// Amount of detail.
uniform int octaves = 4;

// Opacity of the output fog.
uniform float starting_amplitude: hint_range(0.0, 0.5) = 0.5;

// Rate of pattern within the fog.
uniform float starting_frequency = 1.0;

// Shift towards transparency (clamped) for sparser fog.
uniform float shift: hint_range(-1.0, 0.0) = -0.2;

// Direction and speed of travel.
uniform vec2 velocity = vec2(1.0, 1.0);

// Color of the fog.
uniform vec4 fog_color: hint_color = vec4(0.0, 0.0, 0.0, 1.0);

// Noise texture; OpenSimplexNoise is great, but any filtered texture is fine.
uniform sampler2D noise;

float rand(vec2 uv) {
	float amplitude = starting_amplitude;
	float frequency = starting_frequency;
	float output = 0.0;
	for (int i = 0; i < octaves; i++) {
		output += texture(noise, uv * frequency).x * amplitude;
		amplitude /= 2.0;
		frequency *= 2.0;
	}
	return clamp(output + shift, 0.0, 1.0);
}

void fragment() {
	vec2 motion = vec2(rand(UV + TIME * starting_frequency * velocity));
	COLOR = mix(vec4(0.0), fog_color, rand(UV + motion));
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/octaves = 4
shader_param/starting_amplitude = 0.5
shader_param/starting_frequency = 1.0
shader_param/shift = -0.2
shader_param/velocity = Vector2( 0, 0.005 )
shader_param/fog_color = Color( 0.141176, 0.141176, 0.141176, 1 )
shader_param/noise = SubResource( 6 )

[sub_resource type="StyleBoxFlat" id=14]
bg_color = Color( 0.192157, 0, 0, 1 )
corner_radius_top_left = 6
corner_radius_top_right = 6
corner_radius_bottom_right = 6
corner_radius_bottom_left = 6
expand_margin_left = 2.0
expand_margin_right = 1.0
expand_margin_top = 2.0
expand_margin_bottom = 2.0

[sub_resource type="StyleBoxFlat" id=15]
bg_color = Color( 0.215686, 0.215686, 0.215686, 1 )

[sub_resource type="DynamicFont" id=18]
use_mipmaps = true
font_data = ExtResource( 3 )

[sub_resource type="Theme" id=1]
default_font = SubResource( 18 )
VScrollBar/icons/decrement = null
VScrollBar/icons/decrement_highlight = null
VScrollBar/icons/decrement_pressed = null
VScrollBar/icons/increment = null
VScrollBar/icons/increment_highlight = null
VScrollBar/icons/increment_pressed = null
VScrollBar/styles/grabber = SubResource( 14 )
VScrollBar/styles/grabber_highlight = SubResource( 14 )
VScrollBar/styles/grabber_pressed = SubResource( 14 )
VScrollBar/styles/scroll = SubResource( 15 )
VScrollBar/styles/scroll_focus = SubResource( 14 )

[sub_resource type="StyleBoxEmpty" id=19]

[sub_resource type="StyleBoxEmpty" id=20]

[sub_resource type="ShaderMaterial" id=13]
shader = ExtResource( 4 )
shader_param/screen_height = 1920.0
shader_param/amplitude = 0.005
shader_param/frequency = 5.0
shader_param/speed = 0.05
shader_param/amplitude_vertical = 0.004
shader_param/frequency_vertical = 20.0
shader_param/speed_vertical = 0.05
shader_param/scroll_direction = Vector2( 0, 0 )
shader_param/scrolling_speed = 0.04
shader_param/enable_palette_cycling = false
shader_param/palette_speed = 0.1

[sub_resource type="DynamicFont" id=16]
size = 28
font_data = ExtResource( 6 )

[sub_resource type="Theme" id=17]
default_font = SubResource( 16 )

[sub_resource type="Animation" id=11]
resource_name = "fade_to_black"
tracks/0/type = "bezier"
tracks/0/path = NodePath("BGs:modulate:r")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.5, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("BGs:modulate:g")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.5, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("BGs:modulate:b")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.5, 1 )
}
tracks/3/type = "bezier"
tracks/3/path = NodePath("BGs:modulate:a")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}

[sub_resource type="Animation" id=10]
resource_name = "fade_to_image"
tracks/0/type = "bezier"
tracks/0/path = NodePath("BGs:modulate:r")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.5, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("BGs:modulate:g")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.5, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("BGs:modulate:b")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.5, 1 )
}
tracks/3/type = "bezier"
tracks/3/path = NodePath("BGs:modulate:a")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}

[sub_resource type="Animation" id=12]
resource_name = "startup"
length = 3.0
tracks/0/type = "bezier"
tracks/0/path = NodePath("TextDisplay/RichTextLabel:self_modulate:r")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("TextDisplay/RichTextLabel:self_modulate:g")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("TextDisplay/RichTextLabel:self_modulate:b")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}
tracks/3/type = "bezier"
tracks/3/path = NodePath("TextDisplay/RichTextLabel:self_modulate:a")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1, 3 )
}
tracks/4/type = "bezier"
tracks/4/path = NodePath("BGs/Image:self_modulate:r")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}
tracks/5/type = "bezier"
tracks/5/path = NodePath("BGs/Image:self_modulate:g")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}
tracks/6/type = "bezier"
tracks/6/path = NodePath("BGs/Image:self_modulate:b")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}
tracks/7/type = "bezier"
tracks/7/path = NodePath("BGs/Image:self_modulate:a")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1, 3 )
}
tracks/8/type = "bezier"
tracks/8/path = NodePath("BGs/Video:self_modulate:r")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}
tracks/9/type = "bezier"
tracks/9/path = NodePath("BGs/Video:self_modulate:g")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}
tracks/10/type = "bezier"
tracks/10/path = NodePath("BGs/Video:self_modulate:b")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}
tracks/11/type = "bezier"
tracks/11/path = NodePath("BGs/Video:self_modulate:a")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1, 3 )
}
tracks/12/type = "bezier"
tracks/12/path = NodePath("TextDisplay:modulate:r")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}
tracks/13/type = "bezier"
tracks/13/path = NodePath("TextDisplay:modulate:g")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}
tracks/14/type = "bezier"
tracks/14/path = NodePath("TextDisplay:modulate:b")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}
tracks/15/type = "bezier"
tracks/15/path = NodePath("TextDisplay:modulate:a")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.8, 2.5 )
}
tracks/16/type = "bezier"
tracks/16/path = NodePath("TextDisplay/Button:modulate:r")
tracks/16/interp = 1
tracks/16/loop_wrap = true
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}
tracks/17/type = "bezier"
tracks/17/path = NodePath("TextDisplay/Button:modulate:g")
tracks/17/interp = 1
tracks/17/loop_wrap = true
tracks/17/imported = false
tracks/17/enabled = true
tracks/17/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}
tracks/18/type = "bezier"
tracks/18/path = NodePath("TextDisplay/Button:modulate:b")
tracks/18/interp = 1
tracks/18/loop_wrap = true
tracks/18/imported = false
tracks/18/enabled = true
tracks/18/keys = {
"points": PoolRealArray(  ),
"times": PoolRealArray(  )
}
tracks/19/type = "bezier"
tracks/19/path = NodePath("TextDisplay/Button:modulate:a")
tracks/19/interp = 1
tracks/19/loop_wrap = true
tracks/19/imported = false
tracks/19/enabled = true
tracks/19/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1, 3 )
}

[node name="GameEngine" type="Node2D"]
z_index = 2
script = ExtResource( 1 )

[node name="BGs" type="Control" parent="."]
margin_right = 1920.0
margin_bottom = 1080.0
mouse_filter = 2

[node name="BG" type="ColorRect" parent="BGs"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )

[node name="Video" type="VideoPlayer" parent="BGs"]
anchor_right = 1.0
anchor_bottom = 1.0
autoplay = true

[node name="Image" type="TextureRect" parent="BGs"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
expand = true

[node name="TextDisplay" type="Control" parent="."]
margin_left = 1128.0
margin_top = 24.0
margin_right = 1752.0
margin_bottom = 1056.0
mouse_filter = 2

[node name="ColorRect2" type="ColorRect" parent="TextDisplay"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 88.0
margin_top = -24.0
margin_right = -88.0
margin_bottom = 24.0
color = Color( 0, 0, 0, 1 )

[node name="ColorRect3" type="ColorRect" parent="TextDisplay/ColorRect2"]
show_behind_parent = true
material = SubResource( 8 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -8.0
margin_right = 8.0
color = Color( 0, 0, 0, 1 )

[node name="ColorRect" type="ColorRect" parent="TextDisplay"]
material = SubResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 88.0
margin_top = -24.0
margin_right = -88.0
margin_bottom = 24.0
color = Color( 0, 0, 0, 1 )

[node name="ColorRect" type="ColorRect" parent="TextDisplay/ColorRect"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 16.0
margin_top = 24.0
margin_right = -16.0
margin_bottom = -24.0
color = Color( 0.0431373, 0.0431373, 0.0431373, 0.219608 )

[node name="SpeakerNode" type="Control" parent="TextDisplay"]
margin_left = -80.0
margin_top = 344.0
margin_right = 80.0
margin_bottom = 552.0
__meta__ = {
"_edit_group_": true
}

[node name="Panel" type="Panel" parent="TextDisplay/SpeakerNode"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Speaker" type="TextureRect" parent="TextDisplay/SpeakerNode"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 8.0
margin_top = 8.0
margin_right = -8.0
margin_bottom = -8.0
texture = ExtResource( 5 )
expand = true
stretch_mode = 1

[node name="RichTextLabel" type="RichTextLabel" parent="TextDisplay"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 120.0
margin_top = 24.0
margin_right = -104.0
margin_bottom = -392.0
rect_clip_content = false
focus_mode = 2
theme = SubResource( 1 )
custom_styles/focus = SubResource( 19 )
custom_styles/normal = SubResource( 20 )
bbcode_enabled = true
meta_underlined = false
scroll_following = true
selection_enabled = true

[node name="Button" type="TextureButton" parent="TextDisplay"]
self_modulate = Color( 0.278431, 0.219608, 0.219608, 1 )
material = SubResource( 13 )
margin_left = 112.0
margin_top = 664.0
margin_right = 512.0
margin_bottom = 728.0
texture_normal = ExtResource( 2 )
expand = true
stretch_mode = 1

[node name="Label" type="Label" parent="TextDisplay/Button"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = -133.0
margin_bottom = -19.0
rect_scale = Vector2( 1.5, 1.5 )
text = "CONTINUE"
align = 1
valign = 1

[node name="Clock" type="Control" parent="TextDisplay"]
visible = false
margin_left = -96.0
margin_right = 24.0
margin_bottom = 56.0
theme = SubResource( 17 )

[node name="Panel" type="Panel" parent="TextDisplay/Clock"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Panel2" type="Panel" parent="TextDisplay/Clock/Panel"]
self_modulate = Color( 0.580392, 0.580392, 0.580392, 1 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 2.0
margin_top = 3.0
margin_right = -2.0
margin_bottom = -3.0

[node name="Label" type="Label" parent="TextDisplay/Clock"]
anchor_right = 1.0
anchor_bottom = 1.0
text = "00:22"
align = 1
valign = 1

[node name="btn_ClockActivator" type="Button" parent="TextDisplay"]
margin_left = -96.0
margin_right = 25.0
margin_bottom = 55.0
focus_mode = 0
enabled_focus_mode = 0
flat = true

[node name="UI" type="Control" parent="."]
margin_right = 992.0
margin_bottom = 1080.0

[node name="PanelContainer" type="PanelContainer" parent="UI"]
visible = false
margin_left = 32.0
margin_top = 800.0
margin_right = 416.0
margin_bottom = 1056.0

[node name="VBoxContainer" type="VBoxContainer" parent="UI/PanelContainer"]
margin_left = 7.0
margin_top = 7.0
margin_right = 377.0
margin_bottom = 249.0

[node name="HBoxContainer" type="HBoxContainer" parent="UI/PanelContainer/VBoxContainer"]
margin_right = 370.0
margin_bottom = 119.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="Button" type="Button" parent="UI/PanelContainer/VBoxContainer/HBoxContainer"]
margin_right = 119.0
margin_bottom = 119.0
rect_min_size = Vector2( 119, 119 )

[node name="Button2" type="Button" parent="UI/PanelContainer/VBoxContainer/HBoxContainer"]
margin_left = 123.0
margin_right = 242.0
margin_bottom = 119.0
rect_min_size = Vector2( 119, 119 )

[node name="Button3" type="Button" parent="UI/PanelContainer/VBoxContainer/HBoxContainer"]
margin_left = 246.0
margin_right = 365.0
margin_bottom = 119.0
rect_min_size = Vector2( 119, 119 )

[node name="HBoxContainer2" type="HBoxContainer" parent="UI/PanelContainer/VBoxContainer"]
margin_top = 123.0
margin_right = 370.0
margin_bottom = 242.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="Button4" type="Button" parent="UI/PanelContainer/VBoxContainer/HBoxContainer2"]
margin_right = 119.0
margin_bottom = 119.0
rect_min_size = Vector2( 119, 119 )

[node name="Button5" type="Button" parent="UI/PanelContainer/VBoxContainer/HBoxContainer2"]
margin_left = 123.0
margin_right = 242.0
margin_bottom = 119.0
rect_min_size = Vector2( 119, 119 )

[node name="Button6" type="Button" parent="UI/PanelContainer/VBoxContainer/HBoxContainer2"]
margin_left = 246.0
margin_right = 365.0
margin_bottom = 119.0
rect_min_size = Vector2( 119, 119 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/fade_to_black = SubResource( 11 )
anims/fade_to_image = SubResource( 10 )
anims/startup = SubResource( 12 )
